name: release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Install tfplugindocs
        if: ${{ github.ref_type == 'tag' }}
        run: |
          echo "$(go env GOPATH)/bin" >> "$GITHUB_PATH"
          go install github.com/hashicorp/terraform-plugin-docs/cmd/tfplugindocs@latest

      - name: Import GPG key (optional)
        id: import_gpg
        if: ${{ github.ref_type == 'tag' && secrets.GPG_PRIVATE_KEY != '' }}
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Verify docs up-to-date (make docs)
        if: ${{ github.ref_type == 'tag' }}
        run: |
          make docs
          if ! git diff --quiet -- docs; then
            echo "Docs are outdated for this release tag. Run 'make docs' and commit before tagging." >&2
            git --no-pager diff -- docs || true
            exit 1
          fi

      - name: Run GoReleaser (tagged release)
        if: ${{ github.ref_type == 'tag' }}
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: v2.12.0
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}

      - name: Run GoReleaser (snapshot on manual/branch run)
        if: ${{ github.ref_type != 'tag' }}
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: v2.12.0
          args: release --clean --skip=publish --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
