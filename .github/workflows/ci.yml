name: ci

on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate changelog (Keep a Changelog)
        if: github.event_name == 'pull_request'
        id: changelog
        uses: release-flow/keep-a-changelog-action@v3
        with:
          command: query
          version: unreleased
          changelog: CHANGELOG.md

      - name: Ensure Unreleased section has entries
        if: github.event_name == 'pull_request'
        run: |
          if [ -z "${{ steps.changelog.outputs.release-notes }}" ]; then
            echo "CHANGELOG.md [Unreleased] section is empty. Please add entries."
            exit 1
          fi

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Go modules cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Check formatting (gofmt -s)
        run: |
          unformatted=$(gofmt -s -l .)
          if [ -n "$unformatted" ]; then
            echo "Files not gofmt'ed:" >&2
            echo "$unformatted" >&2
            exit 1
          fi

      - name: Lint (golangci-lint)
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m --config=.golangci.yml

      - name: Vet
        run: go vet ./...

      - name: Test
        run: go test -v ./...
