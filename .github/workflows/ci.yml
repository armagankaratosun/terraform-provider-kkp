name: ci

on:
  pull_request:
  push:
    branches:
      - main
    tags-ignore:
      - 'v*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  workflow-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Lint GitHub Actions workflows (actionlint)
        uses: rhysd/actionlint@v1.7.1

  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Go modules cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Install Terraform CLI
        uses: hashicorp/setup-terraform@v3

      - name: Validate examples (local)
        run: make examples-validate

      - name: Check Terraform formatting in examples/
        run: |
          if [ -d examples ]; then
            terraform fmt -check -recursive examples
          else
            echo "No examples/ directory; skipping terraform fmt check"
          fi

      

      - name: Check formatting (gofmt -s)
        run: |
          unformatted=$(gofmt -s -l .)
          if [ -n "$unformatted" ]; then
            echo "Files not gofmt'ed:" >&2
            echo "$unformatted" >&2
            exit 1
          fi

      - name: Lint (golangci-lint)
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m --config=.golangci.yml

      - name: Vet
        run: go vet ./...

      - name: Test
        run: go test -v ./...
